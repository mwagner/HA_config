- id: beace735f1ea4ec0899dd6abe05391ea
  alias: Send me garbage notification
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.garbage_altpapier
    - sensor.garbage_grunabfuhr
    - sensor.garbage_karton
    - sensor.garbage_kehrichtabfuhr
    - sensor.garbage_sonderabfall
    - sensor.garbage_sperrgut
    enabled: true
  - platform: webhook
    allowed_methods:
    - POST
    - PUT
    local_only: false
    webhook_id: garbage-notification
    enabled: true
  condition:
  - condition: template
    value_template: "{% if trigger.platform == 'webhook' %}\n    true\n\n{% elif trigger.platform
      == 'state' %}\n  {% if trigger.from_state.state != 'unavailable' %}\n    {%
      if ( (trigger.to_state.state|lower == 'today') and (trigger.from_state.state
      != trigger.to_state.state) ) %}\n      true\n    {% elif ( (trigger.to_state.state|lower
      == 'tomorrow') and (trigger.from_state.state != trigger.to_state.state) ) %}\n
      \     true\n    {% else %}\n      false\n    {% endif %}\n  {% else %}\n    false\n
      \ {% endif %}\n\n{% elif trigger.platform == 'None' %}\n  true\n\n{% else %}\n
      \ false\n\n{% endif %}"
  action:
  - service: notify.telegram_marco
    data:
      message: "{% if trigger.platform == 'webhook' %}\n  {% set xx = {\n    \"when\":
        trigger.json[\"when\"],\n    \"what\": trigger.json[\"what\"]\n  } %}\n{%
        elif trigger.platform == 'state' %}\n  {% set xx = {\n    \"when\": trigger.to_state.state,\n
        \   \"what\": trigger.to_state.attributes.friendly_name\n  } %}\n{% else %}\n
        \ {% set xx = {\n    \"when\": \"Today\",\n    \"what\": \"a beautiful day.\"\n
        \ } %}\n{% endif %}\n\n{% if xx.when|lower == 'today' %}\n  {% set reminder
        = 'REMINDER: ' %}\n{% else %}\n  {% set reminder = '' %}\n{% endif %}\n\n{{
        reminder ~ xx.when|capitalize }} is {{ xx.what }}\n\n{% if is_state('input_boolean.env_isdev',
        'on') -%}\n  Trigger: {{ trigger.platform }}{{\"\\r\\n\"}}Trigger from: {{
        trigger.from_state.state}}{{\"\\r\\n\"}}Trigger to: {{ trigger.to_state.state}}\n{%
        endif %}\n"
    enabled: true
  - service: logbook.log
    metadata: {}
    data:
      name: Garbage Automation
      message: Automation was triggered
    enabled: true
  mode: single
- id: '1683694236983'
  alias: Alert changes in Fan speed
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.3cecef7e186a_fan1
    attribute: rotations
    to:
  - platform: state
    entity_id: sensor.3cecef7e186a_fan2
    attribute: rotations
    to:
  - platform: state
    entity_id: sensor.3cecef7e186a_fana
    attribute: rotations
    to:
  condition: []
  action:
  - service: notify.telegram_marco
    data:
      message: Speed of "{{ trigger.to_state.attributes.friendly_name }}" has changed
        from {{ trigger.from_state.attributes.rotations }} to {{ trigger.to_state.attributes.rotations
        }}
  mode: single
