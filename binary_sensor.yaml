# Garbage Day sensors
- platform: template
  sensors:
    kehricht_und_sperrgut:
      unique_id: 'kehricht_und_sperrgut'
      friendly_name: 'Kehricht und Sperrgut'
      icon_template: >
        {% if is_state('binary_sensor.kehricht_und_sperrgut', 'on') %}
          mdi:delete-alert
        {% else %}
          mdi:delete-outline
        {% endif %}
      # ON 7 hours (25200s) before all_day event = 17:00 the day before, and OFF at 17:00 on the day,
      # or 2 hours (7200s) before normal event (Problemmüll)
      # CAREFUL: Binary sensors need true/false as input, NOT UI niceties like on/off or the like!
      value_template: >-
        {% set update = states('sensor.date_time') %}
        {% set calendar = 'calendar.kehricht_und_sperrgut' %}
        {# Adapt these for your needs #}
        {% set seconds_before_all_day = 25200 %}
        {% set seconds_before_end_all_day = 25200 %}
        {% set seconds_before_single = 7200 %}
        {% set start = state_attr(calendar,'start_time') %}
        {# Prevent error when no calendar event (we won't have a start_time then) #}
        {% if start != None %}
          {% set _now = now().timestamp() %}
          {% set start = as_timestamp(start) %}
          {% set end = as_timestamp(state_attr(calendar,'end_time')) %}
          {% if _now < end %}
            {% if state_attr(calendar,'all_day') %}
              {{ _now < end - seconds_before_end_all_day and start - _now < seconds_before_all_day }}
            {% else %}
              {{ start - _now < seconds_before_single }}
            {% endif %}
          {% else %}
            false
          {% endif %}
        {% else %}
          false
        {% endif %}
  
    gruenabfuhr:
      unique_id: 'gruenabfuhr'
      friendly_name: 'Grünabfuhr'
      icon_template: >
        {% if is_state('binary_sensor.gruenabfuhr', 'on') %}
          mdi:delete-alert
        {% else %}
          mdi:delete-outline
        {% endif %}
      # ON 7 hours (25200s) before all_day event = 17:00 the day before, and OFF at 17:00 on the day,
      # or 2 hours (7200s) before normal event (Problemmüll)
      # CAREFUL: Binary sensors need true/false as input, NOT UI niceties like on/off or the like!
      value_template: >-
        {% set update = states('sensor.date_time') %}
        {% set calendar = 'calendar.gruenabfuhr' %}
        {# Adapt these for your needs #}
        {% set seconds_before_all_day = 25200 %}
        {% set seconds_before_end_all_day = 25200 %}
        {% set seconds_before_single = 7200 %}
        {% set start = state_attr(calendar,'start_time') %}
        {# Prevent error when no calendar event (we won't have a start_time then) #}
        {% if start != None %}
          {% set _now = now().timestamp() %}
          {% set start = as_timestamp(start) %}
          {% set end = as_timestamp(state_attr(calendar,'end_time')) %}
          {% if _now < end %}
            {% if state_attr(calendar,'all_day') %}
              {{ _now < end - seconds_before_end_all_day and start - _now < seconds_before_all_day }}
            {% else %}
              {{ start - _now < seconds_before_single }}
            {% endif %}
          {% else %}
            false
          {% endif %}
        {% else %}
          false
        {% endif %}
  
    papierabfuhr:
      unique_id: 'papierabfuhr'
      friendly_name: 'Altpapierabfuhr'
      icon_template: >
        {% if is_state('binary_sensor.papierabfuhr', 'on') %}
          mdi:delete-alert
        {% else %}
          mdi:delete-outline
        {% endif %}
      # ON 7 hours (25200s) before all_day event = 17:00 the day before, and OFF at 17:00 on the day,
      # or 2 hours (7200s) before normal event (Problemmüll)
      # CAREFUL: Binary sensors need true/false as input, NOT UI niceties like on/off or the like!
      value_template: >-
        {% set update = states('sensor.date_time') %}
        {% set calendar = 'calendar.papierabfuhr' %}
        {# Adapt these for your needs #}
        {% set seconds_before_all_day = 25200 %}
        {% set seconds_before_end_all_day = 25200 %}
        {% set seconds_before_single = 7200 %}
        {% set start = state_attr(calendar,'start_time') %}
        {# Prevent error when no calendar event (we won't have a start_time then) #}
        {% if start != None %}
          {% set _now = now().timestamp() %}
          {% set start = as_timestamp(start) %}
          {% set end = as_timestamp(state_attr(calendar,'end_time')) %}
          {% if _now < end %}
            {% if state_attr(calendar,'all_day') %}
              {{ _now < end - seconds_before_end_all_day and start - _now < seconds_before_all_day }}
            {% else %}
              {{ start - _now < seconds_before_single }}
            {% endif %}
          {% else %}
            false
          {% endif %}
        {% else %}
          false
        {% endif %}
  
    kartonabfuhr:
      unique_id: 'kartonabfuhr'
      friendly_name: 'Kartonabfuhr'
      icon_template: >
        {% if is_state('binary_sensor.kartonabfuhr', 'on') %}
          mdi:delete-alert
        {% else %}
          mdi:delete-outline
        {% endif %}
      # ON 7 hours (25200s) before all_day event = 17:00 the day before, and OFF at 17:00 on the day,
      # or 2 hours (7200s) before normal event (Problemmüll)
      # CAREFUL: Binary sensors need true/false as input, NOT UI niceties like on/off or the like!
      value_template: >-
        {% set update = states('sensor.date_time') %}
        {% set calendar = 'calendar.kartonabfuhr' %}
        {# Adapt these for your needs #}
        {% set seconds_before_all_day = 25200 %}
        {% set seconds_before_end_all_day = 25200 %}
        {% set seconds_before_single = 7200 %}
        {% set start = state_attr(calendar,'start_time') %}
        {# Prevent error when no calendar event (we won't have a start_time then) #}
        {% if start != None %}
          {% set _now = now().timestamp() %}
          {% set start = as_timestamp(start) %}
          {% set end = as_timestamp(state_attr(calendar,'end_time')) %}
          {% if _now < end %}
            {% if state_attr(calendar,'all_day') %}
              {{ _now < end - seconds_before_end_all_day and start - _now < seconds_before_all_day }}
            {% else %}
              {{ start - _now < seconds_before_single }}
            {% endif %}
          {% else %}
            false
          {% endif %}
        {% else %}
          false
        {% endif %}
  
    altmetallabfuhr:
      unique_id: 'altmetallabfuhr'
      friendly_name: 'Altmetallabfuhr'
      icon_template: >
        {% if is_state('binary_sensor.altmetallabfuhr', 'on') %}
          mdi:delete-alert
        {% else %}
          mdi:delete-outline
        {% endif %}
      # ON 7 hours (25200s) before all_day event = 17:00 the day before, and OFF at 17:00 on the day,
      # or 2 hours (7200s) before normal event (Problemmüll)
      # CAREFUL: Binary sensors need true/false as input, NOT UI niceties like on/off or the like!
      value_template: >-
        {% set update = states('sensor.date_time') %}
        {% set calendar = 'calendar.altmetallabfuhr' %}
        {# Adapt these for your needs #}
        {% set seconds_before_all_day = 25200 %}
        {% set seconds_before_end_all_day = 25200 %}
        {% set seconds_before_single = 7200 %}
        {% set start = state_attr(calendar,'start_time') %}
        {# Prevent error when no calendar event (we won't have a start_time then) #}
        {% if start != None %}
          {% set _now = now().timestamp() %}
          {% set start = as_timestamp(start) %}
          {% set end = as_timestamp(state_attr(calendar,'end_time')) %}
          {% if _now < end %}
            {% if state_attr(calendar,'all_day') %}
              {{ _now < end - seconds_before_end_all_day and start - _now < seconds_before_all_day }}
            {% else %}
              {{ start - _now < seconds_before_single }}
            {% endif %}
          {% else %}
            false
          {% endif %}
        {% else %}
          false
        {% endif %}

    mineralische_abfaelle:
      unique_id: 'mineralische_abfaelle'
      friendly_name: 'Mineralische Abfälle'
      icon_template: >
        {% if is_state('binary_sensor.mineralische_abfaelle', 'on') %}
          mdi:delete-alert
        {% else %}
          mdi:delete-outline
        {% endif %}
      # ON 7 hours (25200s) before all_day event = 17:00 the day before, and OFF at 17:00 on the day,
      # or 2 hours (7200s) before normal event (Problemmüll)
      # CAREFUL: Binary sensors need true/false as input, NOT UI niceties like on/off or the like!
      value_template: >-
        {% set update = states('sensor.date_time') %}
        {% set calendar = 'calendar.mineralische_abfaelle' %}
        {# Adapt these for your needs #}
        {% set seconds_before_all_day = 25200 %}
        {% set seconds_before_end_all_day = 25200 %}
        {% set seconds_before_single = 7200 %}
        {% set start = state_attr(calendar,'start_time') %}
        {# Prevent error when no calendar event (we won't have a start_time then) #}
        {% if start != None %}
          {% set _now = now().timestamp() %}
          {% set start = as_timestamp(start) %}
          {% set end = as_timestamp(state_attr(calendar,'end_time')) %}
          {% if _now < end %}
            {% if state_attr(calendar,'all_day') %}
              {{ _now < end - seconds_before_end_all_day and start - _now < seconds_before_all_day }}
            {% else %}
              {{ start - _now < seconds_before_single }}
            {% endif %}
          {% else %}
            false
          {% endif %}
        {% else %}
          false
        {% endif %}
    
    netatmo_livingroom_low_bat:
      unique_id: "netatmo_livingroom_low_bat"
      device_class: battery
      friendly_name: "Battery: Netatmo Living Room"
      value_template: >-
        {{ states('sensor.office_room_office_room_office_room_living_room_battery_percent') | float(0) < 5 }}
    netatmo_edwardsbedroom_low_bat:
      unique_id: "netatmo_edwardsbedroom_low_bat"
      device_class: battery
      friendly_name: "Battery: Netatmo Edward's Bedroom"
      value_template: >-
        {{ states('sensor.office_room_office_room_office_room_edward_s_bedroom_battery_percent') | float(0) < 5 }}
    netatmo_masterbedroom_low_bat:
      unique_id: "netatmo_masterbedroom_low_bat"
      device_class: battery
      friendly_name: "Battery: Netatmo Master Bedroom"
      value_template: >-
        {{ states('sensor.office_room_office_room_office_room_master_bedroom_battery_percent') | float(0) < 5 }}
    netatmo_outdoor_low_bat:
      unique_id: "netatmo_outdoor_low_bat"
      device_class: battery
      friendly_name: "Battery: Netatmo Outdoor"
      value_template: >-
        {{ states('sensor.office_room_office_room_office_room_outdoor_battery_percent') | float(0) < 5 }}